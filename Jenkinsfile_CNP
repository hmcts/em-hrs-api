#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl
properties([
  [
    $class       : 'GithubProjectProperty',
    displayName  : 'Hearing Recording Service',
    projectUrlStr: 'https://github.com/hmcts/em-hrs-api'
  ],
  pipelineTriggers([
    [$class: 'GitHubPushTrigger']
  ]),
  disableConcurrentBuilds()
])

@Library("Infrastructure")

def type = "java"
def product = "em"
def component = "hrs-api"

def secrets = [
  's2s-${env}': [
    secret('microservicekey-em-hrs-api', 'S2S_KEY'),
    secret('microservicekey-ccd-gw', 'FUNCTIONAL_TEST_CCD_GW_SERVICE_SECRET'),
    secret('microservicekey-em-gw', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN')
  ],
  'rpa-${env}': [
    secret('oauth2-client-id', 'OAUTH_CLIENT_ID'),
    secret('show-oauth2-token', 'IDAM_CLIENT_OAUTH_SECRET')
  ],
  'em-hrs-api-${env}': [
      secret('cvp-storage-connection-string', 'CVP_STORAGE_CONNECTION_STRING'),
      secret('cvp-storage-container-name', 'CVP_STORAGE_CONTAINER_NAME'),
      secret('storage-account-primary-connection-string', 'HRS_STORAGEACCOUNT_CONNECTION_STRING'),
      secret('hrs-storage-container-name', 'HRS_STORAGE_CONTAINER_NAME'),
      secret('notification-api-key', 'NOTIFICATION_API_KEY'),
      secret('idam-system-user-name', 'HRS_SYSTEM_USER'),
      secret('idam-system-user-password', 'HRS_SYSTEM_USER_PASSWORD')
   ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

// Vars for Kubernetes Endpoints
env.CCD_DATA_API_URL = 'http://ccd-data-store-api-aat.service.core-compute-aat.internal'
env.CCD_DEFINITION_FILE = 'hrs_ccd_case_definition_v0.3_AAT.xlsx'
env.CCD_DEF_API = 'http://ccd-definition-store-api-aat.service.core-compute-aat.internal'
env.CVP_CONTAINER_URL = 'https://emhrsapiaat.blob.core.windows.net/cvpsimulator/'
env.IDAM_API_BASE_URI = 'https://idam-api.aat.platform.hmcts.net'
env.IDAM_REDIRECT_URI = 'https://em-hrs-api-aat.service.core-compute-aat.internal/oauth2/callback'
env.OPEN_ID_API_BASE_URI = 'https://idam-web-public.aat.platform.hmcts.net/o'
env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'
env.S2S_BASE_URI = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
env.XUI_API_URL = 'https://manage-case.aat.platform.hmcts.net'

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

withPipeline(type, product, component) {
  enableDbMigration('em-hrs-api')
  overrideVaultEnvironments(vaultOverrides)
  loadVaultSecrets(secrets)


  onMaster {
    after('test') {
      sh '''
            curl https://raw.githubusercontent.com/hmcts/reform-api-docs/master/bin/publish-swagger-docs.sh > publish-swagger-docs.sh
            sh ./publish-swagger-docs.sh
             '''
    }
  }

  onMaster()
    {
  enablePactAs([AppPipelineDsl.PactRoles.CONSUMER])
    }

  after('test') {

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/contract",
      reportFiles          : "index.html",
      reportName           : "HRS API Contract Tests Report"
    ]

  publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/checkstyle",
        reportFiles          : "main.html",
        reportName           : "HRS API Checkstyle Main Report"
      ]

      publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/checkstyle",
        reportFiles          : "test.html",
        reportName           : "HRS API Checkstyle Test Report"
      ]

      publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/pmd",
        reportFiles          : "main.html",
        reportName           : "HRS API PMD Main Report"
      ]

      publishHTML target: [
        allowMissing         : true,
        alwaysLinkToLastBuild: true,
        keepAll              : true,
        reportDir            : "build/reports/tests/test",
        reportFiles          : "index.html",
        reportName           : "HRS API Unit Tests Report"
      ]
    }



  after('smoketest:aat') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/smoke",
      reportFiles          : "index.html",
      reportName           : "HRS API Smoke Test Report"
    ]
  }

  after('functionalTest:aat') {

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "HRS API Functional Test Report"
    ]
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('test') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/checkstyle",
      reportFiles          : "main.html",
      reportName           : "HRS API Checkstyle Main Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/checkstyle",
      reportFiles          : "test.html",
      reportName           : "HRS API Checkstyle Test Report"
    ]

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/pmd",
      reportFiles          : "main.html",
      reportName           : "HRS API PMD Main Report"
    ]


    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/test",
      reportFiles          : "index.html",
      reportName           : "HRS API Unit Tests Report"
    ]

  }

  after('smoketest:preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/smoke",
      reportFiles          : "index.html",
      reportName           : "HRS API Smoke Test Report"
    ]
  }

  after('functionalTest:preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "HRS API Functional Test Report"
    ]
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
  }

  after('pactconsumerVerification:preview') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/contract",
      reportFiles          : "index.html",
      reportName           : "HRS API Contract Test Report Preview"
    ]
  }

  after('pactconsumerVerification:aat') {
    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/contract",
      reportFiles          : "index.html",
      reportName           : "HRS API Contract Test Report AAT"
    ]
  }
  syncBranchesWithMaster(['demo', 'perftest', 'ithc'])
}
