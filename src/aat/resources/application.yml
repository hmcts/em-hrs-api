---
spring:
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  datasource.driver-class-name: org.postgresql.Driver
  jpa:
    database: postgresql
    show-sql: ${SHOW_SQL:true}
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 5
          batch_versioned_data: true
    main:
      allow-bean-definition-overriding: true
    liquibase:
      enabled: ${ENABLE_DB_MIGRATE:false}
      change-log: classpath:/db/db.changelog-master.xml
    datasource:
      url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5444/emhrs}
      username: ${SPRING_DATASOURCE_USERNAME:emhrs}
      password: ${SPRING_DATASOURCE_PASSWORD:emhrs}
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:http://localhost:5000/o}
        registration:
          oidc:
            client-id: webshow #TODO: create proper idam client-id for hrs
            client-secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}

test:
  url: ${TEST_URL:http://localhost:8080}

idam:
  api:
    url: ${IDAM_API_BASE_URI:http://localhost:5000}
  client:
    id: ${OAUTH_CLIENT_ID:webshow}
    secret: ${IDAM_CLIENT_OAUTH_SECRET:AAAAAAAAAAAAAAAA}
    redirect_uri: ${IDAM_REDIRECT_URI:http://localhost:8080/oauth2redirect}
    grant_type: 'password'
    scope: 'openid roles profile'

s2s:
  api:
    url: ${S2S_BASE_URI:http://localhost:4502}
    secret: ${S2S_KEY:AAAAAAAAAAAAAAAA}
    serviceName: ${S2S_SERVICE_NAME:em_hrs_api}
    ccdGwSecret: ${FUNCTIONAL_TEST_CCD_GW_SERVICE_SECRET:AAAAAAAAAAAAAAAA}
    ccdGwServiceName: ${CCD_GW_SERVICE_NAME:ccd_gw}

ccd-def:
  api:
    url: ${CCD_DEF_API:http://localhost:4451}

document_management:
  url: ${DM_STORE_APP_URL:http://localhost:4603}
  docker_url: http://dm-store:8080

core_case_data:
  api:
    url: ${CCD_DATA_API_URL:http://localhost:4452}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:d30268e8-8979-4579-8d58-010dbe03a1e6}

app-insights:
  dev-mode: off
  request-component: on
  telemetry-component: on
